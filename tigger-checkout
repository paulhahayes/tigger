#!/bin/dash

# check repo is initalised
 if [ ! -d .tigger ];then 
    >&2 echo "tigger-checkout: error: tigger repository directory .tigger not found"
    exit 1
fi

# check that there have been commits
if find .tigger/commits/  -maxdepth 0 ! -empty | ifne false; then
    >&2 echo "tigger-checkout: error: this command can not be run until after the first commit"
    exit 1
fi

# check the usage
if ! [ "$#" -eq 1 ]; then
    >&2 echo "usage: tigger-checkout <branch>"
    exit 1
fi

# check the branch exists
if ! [ -d .tigger/branches/"$1"  ]; then
    >&2 echo "tigger-checkout: error: unknown branch '$1'"
    exit 1
fi

# Create variables to access directories
BRANCH="$(find .tigger/branches/.head/ -mindepth 1 -maxdepth 1 -type d -exec basename {} \;)"
BRANCHINDEX="$(find ./.tigger/branches/.head/"$BRANCH"/ -type f  -printf "%f\n" | sort -r | head -1)"
HEAD=."$BRANCH"."$BRANCHINDEX"

# check that the checkout isn't for the current branch
if [ $1 = "$BRANCH" ]; then
    >&2 echo "Already on '$1'"
    exit 1
fi

# Create variables specific for the target branch
TARGETBRANCH="$1"
TARGETBRANCHINDEX=$(cat .tigger/branches/"$TARGETBRANCH"/.branchindex)
CURRENTCOMMIT=$(cat .tigger/branches/"$TARGETBRANCH"/.commitindex)

if ! diff .tigger/branches/"$BRANCH"/.commitindex .tigger/branches/"$TARGETBRANCH"/.commitindex >/dev/null; then

    # Remove files from the working directory that isn't commited in the target branch
    for file in $(basename -a $(find .tigger/branches/"$BRANCH" -type f )); do
        if ! [ -f .tigger/"$TARGETBRANCH"/"$file" ]; then
            rm -f "$file" 
        fi
    done

    # Add files to the target commit that might be missing or have changes
    for file in $(basename -a $(find  .tigger/branches/"$TARGETBRANCH" -type f )); do
        # don't add the datafiles
        if ! [ "$file" = ".commitindex" ] && ! [ "$file" = ".branchindex" ];then
            cp .tigger/branches/$TARGETBRANCH/$file .
        fi
    done
fi

# if there are changes in the index from other branches
# add them to the index of the target branch
if [ -d .tigger/changes ]; then

    for file in $(basename -a $(find .tigger/changes -type f )); do
        cp -r .tigger/changes/$file .tigger/index/.$TARGETBRANCH.$TARGETBRANCHINDEX
    done
else  
    rm -r .tigger/index/.$TARGETBRANCH.$TARGETBRANCHINDEX/* 2>/dev/null
    cp -r cp -r .tigger/commits/"$CURRENTCOMMIT"/* .tigger/index/.$TARGETBRANCH.$TARGETBRANCHINDEX 2>/dev/null
fi

mkdir -p .tigger/.headinfo
cp -R .tigger/branches/.head/"$BRANCH" .tigger/.headinfo
rm -r .tigger/branches/.head/"$BRANCH"
if ! cp -R .tigger/.headinfo/"$TARGETBRANCH" tigger/branches/.head/ 2>/dev/null; then
    mkdir .tigger/branches/.head/"$TARGETBRANCH" && touch .tigger/branches/.head/"$TARGETBRANCH"/0
else
rm -r .tigger/.headinfo/"$TARGETBRANCH"
fi
echo "Switched to branch '$TARGETBRANCH'"
exit 0


